FROM node:18-alpine as builder

# Set working directory
WORKDIR /app

# Install dependencies for both frontend and backend
COPY backend/package*.json ./backend/
COPY frontend/package*.json ./frontend/

# Install backend dependencies
WORKDIR /app/backend
RUN npm ci

# Install frontend dependencies
WORKDIR /app/frontend
RUN npm ci

# Copy source code
WORKDIR /app
COPY . .

# Build frontend
WORKDIR /app/frontend
RUN npm run build

# Production stage
FROM node:18-alpine

# Set environment variables
ENV NODE_ENV=production

# Create app directory
WORKDIR /app

# Copy built frontend and backend code
COPY --from=builder /app/backend ./backend
COPY --from=builder /app/frontend/build ./frontend/build

# Install only production dependencies for backend
WORKDIR /app/backend
RUN npm ci --only=production

# Expose port
EXPOSE 8000

# Set working directory
WORKDIR /app

# Add startup script
COPY docker-entrypoint.sh .
RUN chmod +x docker-entrypoint.sh

# Start app
ENTRYPOINT ["./docker-entrypoint.sh"]
